@model RegisterModel
@{
    Layout = "_ColumnsOne";

    //title
    NopHtml.AddTitleParts(T("PageTitle.Register").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-registration-page");
}

<div class="page registration-page section-width">
    <div class="section-padding">
        <div class="vult-page-title">
            <h1 class="vult-account-title">@T("Account.Register")</h1>
        </div>
        <div class="page-body">
            @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.RegisterTop, additionalData = Model })
            <form asp-route="Register" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" method="post" autocomplete="off">
                <div asp-validation-summary="ModelOnly" class="message-error"></div>
                <div class="vult-form">
                    <div class="vult-form-fields">
                        @if (Model.GenderEnabled)
                        {
                            <div class="inputs">
                                <label for="gender">@T("Account.Fields.Gender"):</label>
                                <div id="gender" class="gender">
                                    <span class="male">
                                        <input type="radio" asp-for="Gender" value="M" checked="@(Model.Gender == "M")" id="gender-male" />
                                        <label class="forcheckbox vult-radio" for="gender-male">@T("Account.Fields.Gender.Male")</label>
                                        <div class="bullet">
                                            <div class="line zero"></div>
                                            <div class="line one"></div>
                                            <div class="line two"></div>
                                            <div class="line three"></div>
                                            <div class="line four"></div>
                                            <div class="line five"></div>
                                            <div class="line six"></div>
                                            <div class="line seven"></div>
                                        </div>
                                    </span>
                                    <span class="female">
                                        <input type="radio" asp-for="Gender" value="F" checked="@(Model.Gender == "F")" id="gender-female" />
                                        <label class="forcheckbox vult-radio" for="gender-female">@T("Account.Fields.Gender.Female")</label>
                                        <div class="bullet">
                                            <div class="line zero"></div>
                                            <div class="line one"></div>
                                            <div class="line two"></div>
                                            <div class="line three"></div>
                                            <div class="line four"></div>
                                            <div class="line five"></div>
                                            <div class="line six"></div>
                                            <div class="line seven"></div>
                                        </div>
                                    </span>
                                </div>
                            </div>
                        }
                        @if (Model.DateOfBirthEnabled)
                        {
                            <div class="inputs date-of-birth">
                                <div class="vult-input">
                                    <label>@T("Account.Fields.DateOfBirth"):</label>
                                    <nop-date-picker class="vult-dob-select-without-search" asp-day-name="@Html.NameFor(x => x.DateOfBirthDay)"
                                                     asp-month-name="@Html.NameFor(x => x.DateOfBirthMonth)"
                                                     asp-year-name="@Html.NameFor(x => x.DateOfBirthYear)"
                                                     asp-begin-year="@(DateTime.Now.AddYears(-110))"
                                                     asp-end-year="@(DateTime.UtcNow)"
                                                     asp-selected-date="@Model.ParseDateOfBirth()" />

                                    @if (Model.DateOfBirthRequired)
                                    {
                                        <nop-required />
                                    }
                                    <span asp-validation-for="DateOfBirthDay"></span>
                                    <span asp-validation-for="DateOfBirthMonth"></span>
                                    <span asp-validation-for="DateOfBirthYear"></span>
                                </div>
                            </div>
                        }
                        @if (Model.FirstNameEnabled)
                        {
                            <div class="inputs">
                                <div class="vult-input">
                                    <input class="vult-input-effect" asp-for="FirstName" placeholder="@T("account.fields.firstname")" />
                                    <label asp-for="FirstName"></label>
                                    <span class="focus-border"><i></i></span>
                                    @if (Model.FirstNameRequired)
                                    {
                                        <nop-required />
                                    }
                                </div>
                                <span asp-validation-for="FirstName"></span>
                            </div>
                        }
                        @if (Model.LastNameEnabled)
                        {
                            <div class="inputs">
                                <div class="vult-input">
                                    <input class="vult-input-effect" asp-for="LastName" placeholder="@T("account.fields.lastname")" />
                                    <label asp-for="LastName"></label>
                                    <span class="focus-border"><i></i></span>
                                    @if (Model.LastNameRequired)
                                    {
                                        <nop-required />
                                    }
                                </div>
                                <span asp-validation-for="LastName"></span>
                            </div>
                        }
                        <div class="inputs">
                            <div class="vult-input">
                                <input class="vult-input-effect" asp-for="Email" placeholder="@T("account.fields.email")" />
                                <label asp-for="Email"></label>
                                <span class="focus-border"><i></i></span>
                                <nop-required />
                            </div>
                            <span asp-validation-for="Email"></span>
                        </div>
                        @if (Model.EnteringEmailTwice)
                        {

                            <div class="inputs">
                                <div class="vult-input">
                                    <input class="vult-input-effect" asp-for="ConfirmEmail" placeholder="@T("account.fields.confirmemail")" />
                                    <label asp-for="ConfirmEmail"></label>
                                    <span class="focus-border"><i></i></span>
                                    <nop-required />
                                </div>
                                <span asp-validation-for="ConfirmEmail"></span>
                            </div>
                        }
                        @if (Model.UsernamesEnabled)
                        {
                            <div class="inputs">
                                <div class="vult-input">
                                    <input class="vult-input-effect" asp-for="Username" placeholder="@T("account.fields.username")" />
                                    <label asp-for="Username"></label>
                                    <span class="focus-border"><i></i></span>
                                    <nop-required />
                                </div>
                                    @if (Model.CheckUsernameAvailabilityEnabled)
                                    {
                                        @await Html.PartialAsync("_CheckUsernameAvailability")
                                    }
                                <span asp-validation-for="Username"></span>
                            </div>
                        }
                        @if (Model.CompanyEnabled)
                        {
                            <div class="inputs">
                                <div class="vult-input">
                                    <input class="vult-input-effect" asp-for="Company" placeholder="@T("account.fields.company")" />
                                    <label asp-for="Company"></label>
                                    <span class="focus-border"><i></i></span>
                                    @if (Model.CompanyRequired)
                                    {
                                        <nop-required />
                                    }
                                </div>
                                <span asp-validation-for="Company"></span>
                            </div>
                        }

                        @if (Model.StreetAddressEnabled)
                        {
                            <div class="inputs">
                                <div class="vult-input">
                                    <input class="vult-input-effect" asp-for="StreetAddress" placeholder="@T("account.fields.streetaddress")" />
                                    <label asp-for="StreetAddress"></label>
                                    <span class="focus-border"><i></i></span>
                                    @if (Model.StreetAddressRequired)
                                    {
                                        <nop-required />
                                    }
                                </div>
                                <span asp-validation-for="StreetAddress"></span>
                            </div>
                        }
                        @if (Model.StreetAddress2Enabled)
                        {
                            <div class="inputs">
                                <div class="vult-input">
                                    <input class="vult-input-effect" asp-for="StreetAddress2" placeholder="@T("account.fields.streetaddress2")" />
                                    <label asp-for="StreetAddress2"></label>
                                    <span class="focus-border"><i></i></span>
                                    @if (Model.StreetAddress2Required)
                                    {
                                        <nop-required />
                                    }
                                </div>
                                <span asp-validation-for="StreetAddress2"></span>
                            </div>
                        }
                        @if (Model.ZipPostalCodeEnabled)
                        {
                            <div class="inputs">
                                <div class="vult-input">
                                    <input class="vult-input-effect" asp-for="ZipPostalCode" placeholder="@T("account.fields.zippostalcode")" />
                                    <label asp-for="ZipPostalCode"></label>
                                    <span class="focus-border"><i></i></span>
                                    @if (Model.ZipPostalCodeRequired)
                                    {
                                        <nop-required />
                                    }
                                </div>
                                <span asp-validation-for="ZipPostalCode"></span>
                            </div>
                        }
                        @if (Model.CountyEnabled)
                        {
                            <div class="inputs">
                                <div class="vult-input">
                                    <input class="vult-input-effect" asp-for="County" placeholder="@T("account.fields.county")" />
                                    <label asp-for="County"></label>
                                    <span class="focus-border"><i></i></span>
                                    @if (Model.CountyRequired)
                                    {
                                        <nop-required />
                                    }
                                </div>
                                <span asp-validation-for="County"></span>
                            </div>
                        }
                        @if (Model.CityEnabled)
                        {
                            <div class="inputs">
                                <div class="vult-input">
                                    <input class="vult-input-effect" asp-for="City" placeholder="@T("account.fields.city")" />
                                    <label asp-for="City"></label>
                                    <span class="focus-border"><i></i></span>
                                    @if (Model.CityRequired)
                                    {
                                        <nop-required />
                                    }
                                </div>
                                <span asp-validation-for="City"></span>
                            </div>
                        }
                        @if (Model.CountryEnabled)
                        {
                            <div class="inputs">
                                <div class="vult-input">
                                    <select class="vult-input-effect vult-common-select" asp-for="CountryId" asp-items="Model.AvailableCountries"
                                            data-trigger="country-select"
                                            data-url="@(Url.RouteUrl("GetStatesByCountryId"))"
                                            data-stateprovince="#@Html.IdFor(model => model.StateProvinceId)"
                                            data-loading="#states-loading-progress"></select>
                                    <label asp-for="CountryId"></label>
                                    <span class="focus-border"><i></i></span>
                                    @if (Model.CountryRequired)
                                    {
                                        <nop-required />
                                    }
                                </div>
                                <span asp-validation-for="CountryId"></span>
                            </div>
                        }
                        @if (Model.StateProvinceEnabled)
                        {
                            <div class="inputs">
                                <div class="vult-input">
                                    <select class="vult-input-effect vult-common-select" asp-for="StateProvinceId" asp-items="Model.AvailableStates"></select>
                                    <label asp-for="StateProvinceId"></label>
                                    <span class="focus-border"><i></i></span>
                                    @if (Model.StateProvinceRequired)
                                    {
                                        <nop-required />
                                    }
                                    <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait")</span>
                                </div>
                                <span asp-validation-for="StateProvinceId"></span>
                            </div>
                        }
                        @if (Model.PhoneEnabled)
                        {
                            <div class="inputs">
                                <div class="vult-input">
                                    <input class="vult-input-effect" asp-for="Phone" placeholder="@T("account.fields.phone")" />
                                    <label asp-for="Phone"></label>
                                    <span class="focus-border"><i></i></span>
                                    @if (Model.PhoneRequired)
                                    {
                                        <nop-required />
                                    }
                                </div>
                                <span asp-validation-for="Phone"></span>
                            </div>
                        }
                        @if (Model.FaxEnabled)
                        {
                            <div class="inputs">
                                <div class="vult-input">
                                    <input class="vult-input-effect" asp-for="Fax" placeholder="@T("account.fields.fax")" />
                                    <label asp-for="Fax"></label>
                                    <span class="focus-border"><i></i></span>
                                    @if (Model.FaxRequired)
                                    {
                                        <nop-required />
                                    }
                                </div>
                                <span asp-validation-for="Fax"></span>
                            </div>
                        }
                        @if (Model.DisplayVatNumber)
                        {
                            <div class="inputs">
                                <div class="vult-input">
                                    <input class="vult-input-effect" asp-for="VatNumber" placeholder="@T("account.fields.vatnumber")" />
                                    <label asp-for="VatNumber"></label>
                                    <span class="focus-border"><i></i></span>
                                </div>
                                <span class="vat-note">
                                    <em>@T("Account.Fields.VatNumber.Note")</em>
                                </span>
                            </div>
                        }
                        <div class="inputs">
                            <div class="vult-input">
                                <input class="vult-input-effect" asp-for="Password" placeholder="@T("account.fields.password")" />
                                <label asp-for="Password"></label>
                                <span class="focus-border"><i></i></span>
                                <nop-required />
                            </div>
                            <span asp-validation-for="Password"></span>
                        </div>
                        <div class="inputs">
                            <div class="vult-input">
                                <input class="vult-input-effect" asp-for="ConfirmPassword" placeholder="@T("account.fields.confirmpassword")" />
                                <label asp-for="ConfirmPassword"></label>
                                <span class="focus-border"><i></i></span>
                                <nop-required />
                            </div>
                            <span asp-validation-for="ConfirmPassword"></span>
                        </div>
                        @if (Model.AllowCustomersToSetTimeZone)
                        {

                            <div class="inputs">
                                <div class="vult-input">
                                    <select class="vult-input-effect vult-common-select" asp-for="TimeZoneId" asp-items="Model.AvailableTimeZones"></select>
                                    <label asp-for="TimeZoneId"></label>
                                    <span class="focus-border"><i></i></span>
                                </div>
                                <span asp-validation-for="TimeZoneId"></span>
                            </div>
                        }
                        @if (Model.CustomerAttributes.Count > 0)
                        {
                            @await Html.PartialAsync("_CustomerAttributes", Model.CustomerAttributes)
                        }
                        @if (Model.DisplayCaptcha)
                        {
                            <nop-captcha />
                        }
                        @if (Model.HoneypotEnabled)
                        {
                            @Html.Raw(Html.GenerateHoneypotInput())
                        }
                    </div>

                    <div class="vult-gdpr-newsletter">
                        @if (Model.NewsletterEnabled)
                        {
                            <div class="inputs">
                                <input class="inp-cbx" asp-for="Newsletter" />
                                <label class="vult-info-newsletter cbx" asp-for="Newsletter">
                                    @T("account.fields.newsletter")
                                    <span>
                                        <svg width="12px" height="10px" viewBox="0 0 12 10">
                                            <polyline points="1.5 6 4.5 9 10.5 1"></polyline>
                                        </svg>
                                    </span>
                                </label>
                                <span asp-validation-for="Newsletter"></span>
                            </div>
                        }
                        @if (Model.AcceptPrivacyPolicyEnabled)
                        {
                            <script asp-location="Footer">
                                $(document).ready(function() {
                                    $('#register-button').on('click', function() {
                                        if ($('#accept-consent').is(':checked')) {
                                            //do some stuff
                                            return true;
                                        }
                                        else {
                                            //just show validation errors, don't post
                                            Swal.fire({
                                                title: '<strong>@Html.Raw(JavaScriptEncoder.Default.Encode(T("Account.Fields.AcceptPrivacyPolicy.Required").Text))</strong>',
                                                icon: 'warning',
                                                customClass: {
                                                    confirmButton: 'primary-btn',
                                                },
                                                    confirmButtonColor: '#333',
                                                    confirmButtonText: '<span>@T("Theme.Vulture.Header.Search.Button.Text")</span>',
                                                })
                                                event.preventDefault();
                                            return false;
                                        }
                                    });
                                });
                            </script>
                            <div class="inputs accept-consent">
                                <input class="inp-cbx" id="accept-consent" type="checkbox" name="accept-consent" />
                                <label class="cbx" for="accept-consent">
                                    @T("Account.Fields.AcceptPrivacyPolicy")
                                    <span>
                                        <svg width="12px" height="10px" viewBox="0 0 12 10">
                                            <polyline points="1.5 6 4.5 9 10.5 1"></polyline>
                                        </svg>
                                    </span>
                                </label>
                                @if (Model.AcceptPrivacyPolicyPopup)
                                {
                                    <span class="read" id="read-privacyinfo">@T("Account.Fields.AcceptPrivacyPolicy.Read")</span>
                                    <script asp-location="Footer">
                                    $(document).ready(function() {
                                        $('#read-privacyinfo').on('click',
                                            function(e) {
                                                displayPopupContentFromUrl(
                                                    '@Url.RouteUrl("TopicPopup", new {SystemName = "privacyinfo"})',
                                                    '@T("Account.Fields.AcceptPrivacyPolicy")');
                                            });
                                    });
                                    </script>
                                }
                                else
                                {
                                    <a class="read" id="read-privacyinfo" href="@Url.RouteTopicUrl("privacyinfo")">@T("Account.Fields.AcceptPrivacyPolicy.Read")</a>
                                }
                            </div>
                        }

                        @if (Model.GdprConsents.Count > 0)
                        {
                            foreach (var consent in Model.GdprConsents)
                            {
                                if (consent.IsRequired)
                                {
                                    <script asp-location="Footer">
                                    $(document).ready(function() {
                                        $('#register-button').on('click', function() {
                                            if ($('#consent@(consent.Id)').is(':checked')) {
                                                    //do some stuff
                                                    return true;
                                                } else {
                                                    //just show validation errors, don't post
                                                Swal.fire({
                                                title: '<strong>@Html.Raw(JavaScriptEncoder.Default.Encode(consent.RequiredMessage))</strong>',
                                                icon: 'warning',
                                                customClass: {
                                                    confirmButton: 'primary-btn',
                                                    },
                                                    confirmButtonColor: '#333',
                                                    confirmButtonText: '<span>@T("Theme.Vulture.Header.Search.Button.Text")</span>',
                                                })
                                                event.preventDefault();
                                                    return false;
                                                }
                                            });
                                    });
                                    </script>
                                }
                                <div class="inputs accept-consent">
                                    <input class="inp-cbx" id="consent@(consent.Id)" type="checkbox" name="consent@(consent.Id)" checked="@consent.Accepted" />
                                    <label class="cbx" for="consent@(consent.Id)">
                                        @consent.Message
                                        <span>
                                            <svg width="12px" height="10px" viewBox="0 0 12 10">
                                                <polyline points="1.5 6 4.5 9 10.5 1"></polyline>
                                            </svg>
                                        </span>
                                    </label>
                                </div>
                            }
                        }
                    </div>

                    <div class="buttons">
                        <button type="submit" name="register-button" id="register-button" class="button-1 register-next-step-button primary-btn"><span>@T("Account.Register.Button")</span></button>
                    </div>
                </div>
            </form>
            <div class="external-authentication">
                @await Component.InvokeAsync(typeof(ExternalMethodsViewComponent), "ExternalAuthentication")
            </div>
        </div>
    </div>
</div>

<script asp-location="Footer">
    $(document).ready(function () {
        $(".vult-common-select").select2({
            allowClear: true,
            dropdownCssClass: "vult-dropdown-select-height"
        });
    });

    $(document).ready(function () {
        $(".vult-dob-select-without-search").select2({
            minimumResultsForSearch: -1,
            allowClear: true,
            dropdownCssClass: "vult-dropdown-select-height"
        });
    });
</script>