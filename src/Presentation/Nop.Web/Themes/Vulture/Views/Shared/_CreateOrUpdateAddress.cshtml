@model AddressModel

<input class="address-id" asp-for="Id" type="hidden" />

<div class="edit-address">
    <div class="vult-form-fields">
        <div class="inputs">
            <div class="vult-input">
                <input class="vult-input-effect" asp-for="FirstName" placeholder="@T("account.fields.firstname")" />
                <label asp-for="FirstName"></label>
                <span class="focus-border"><i></i></span>
                <nop-required />
            </div>
            <span asp-validation-for="FirstName"></span>
        </div>

        <div class="inputs">
            <div class="vult-input">
                <input class="vult-input-effect" asp-for="LastName" placeholder="@T("account.fields.lastname")" />
                <label asp-for="LastName"></label>
                <span class="focus-border"><i></i></span>
                <nop-required />
            </div>
            <span asp-validation-for="LastName"></span>
        </div>

        <div class="inputs">
            <div class="vult-input">
                <input class="vult-input-effect" asp-for="Email" placeholder="@T("account.fields.email")" />
                <label asp-for="Email"></label>
                <span class="focus-border"><i></i></span>
                <nop-required />
            </div>
            <span asp-validation-for="Email"></span>
        </div>

        @if (Model.CompanyEnabled)
        {
            <div class="inputs">
                <div class="vult-input">
                    <input class="vult-input-effect" asp-for="Company" placeholder="@T("account.fields.company")" />
                    <label asp-for="Company"></label>
                    <span class="focus-border"><i></i></span>
                    @if (Model.CompanyRequired)
                    {
                        <nop-required />
                    }
                </div>
                <span asp-validation-for="Company"></span>
            </div>
        }

        @if (Model.CountryEnabled)
        {
            <div class="inputs">
                <div class="vult-input">
                    <label asp-for="CountryId"></label>
                    <select class="vult-input-effect vult-common-select" asp-for="CountryId" asp-items="Model.AvailableCountries"
                            data-trigger="country-select"
                            data-url="@(Url.RouteUrl("GetStatesByCountryId"))"
                            data-stateprovince="#@Html.IdFor(model => model.StateProvinceId)"
                            data-loading="#states-loading-progress"></select>
                    <span class="focus-border"><i></i></span>
                    <nop-required />
                </div>
                <span asp-validation-for="CountryId"></span>
            </div>
        }

        @if (Model.CountryEnabled && Model.StateProvinceEnabled)
        {
            <div class="inputs">
                <div class="vult-input">
                    <label asp-for="StateProvinceId"></label>
                    <select class="vult-input-effect vult-common-select" asp-for="StateProvinceId" asp-items="Model.AvailableStates"
                            data-trigger="state-select">
                    </select>
                    <span class="focus-border"><i></i></span>
                    <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait")</span>
                    <span asp-validation-for="StateProvinceId"></span>
                </div>
            </div>
        }

        @if (Model.CountyEnabled)
        {
            <div class="inputs">
                <div class="vult-input">
                    <input class="vult-input-effect" asp-for="County" placeholder="@T("account.fields.county")" />
                    <label asp-for="County"></label>
                    <span class="focus-border"><i></i></span>
                    @if (Model.CountyRequired)
                    {
                        <nop-required />
                    }
                </div>
                <span asp-validation-for="County"></span>
            </div>
        }

        @if (Model.CityEnabled)
        {
            <div class="inputs">
                <div class="vult-input">
                    <input class="vult-input-effect" asp-for="City" placeholder="@T("account.fields.city")" />
                    <label asp-for="City"></label>
                    <span class="focus-border"><i></i></span>
                    @if (Model.CityRequired)
                    {
                        <nop-required />
                    }
                </div>
                <span asp-validation-for="City"></span>
            </div>
        }

        @if (Model.StreetAddressEnabled)
        {
            <div class="inputs">
                <div class="vult-input">
                    <input class="vult-input-effect" asp-for="Address1" placeholder="@T("account.fields.streetaddress")" />
                    <label asp-for="Address1"></label>
                    <span class="focus-border"><i></i></span>
                    @if (Model.StreetAddressRequired)
                    {
                        <nop-required />
                    }
                </div>
                <span asp-validation-for="Address1"></span>
            </div>
        }

        @if (Model.StreetAddress2Enabled)
        {
            <div class="inputs">
                <div class="vult-input">
                    <input class="vult-input-effect" asp-for="Address2" placeholder="@T("account.fields.streetaddress2")" />
                    <label asp-for="Address2"></label>
                    <span class="focus-border"><i></i></span>
                    @if (Model.StreetAddress2Required)
                    {
                        <nop-required />
                    }
                </div>
                <span asp-validation-for="Address2"></span>
            </div>
        }

        @if (Model.ZipPostalCodeEnabled)
        {
            <div class="inputs">
                <div class="vult-input">
                    <input class="vult-input-effect" asp-for="ZipPostalCode" placeholder="@T("account.fields.zippostalcode")" />
                    <label asp-for="ZipPostalCode"></label>
                    <span class="focus-border"><i></i></span>
                    @if (Model.ZipPostalCodeRequired)
                    {
                        <nop-required />
                    }
                </div>
                <span asp-validation-for="ZipPostalCode"></span>
            </div>
        }

        @if (Model.PhoneEnabled)
        {
            <div class="inputs">
                <div class="vult-input">
                    <input class="vult-input-effect" asp-for="PhoneNumber" placeholder="@T("account.fields.phone")" />
                    <label asp-for="PhoneNumber"></label>
                    <span class="focus-border"><i></i></span>
                    @if (Model.PhoneRequired)
                    {
                        <nop-required />
                    }
                </div>
                <span asp-validation-for="PhoneNumber"></span>
            </div>
        }

        @if (Model.FaxEnabled)
        {
            <div class="inputs">
                <div class="vult-input">
                    <input class="vult-input-effect" asp-for="FaxNumber" placeholder="@T("account.fields.fax")" />
                    <label asp-for="FaxNumber"></label>
                    <span class="focus-border"><i></i></span>
                    @if (Model.FaxRequired)
                    {
                        <nop-required />
                    }
                </div>
                <span asp-validation-for="FaxNumber"></span>
            </div>
        }

        @if (Model.CustomAddressAttributes.Count > 0)
        {
            @await Html.PartialAsync("_AddressAttributes", Model.CustomAddressAttributes)
        }

        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.AddressBottom, additionalData = Model })
    </div>
</div>

<script asp-location="Footer">
    $(document).ready(function () {
        $(".vult-common-select").select2({
            allowClear: true,
            dropdownCssClass: "vult-dropdown-select-height"
        });
    });
</script>