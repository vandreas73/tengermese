@model CustomerBackInStockSubscriptionsModel

@using Nop.Core.Domain.Catalog

@{
    Layout = "_ColumnsTwo-Account";

    //title
    NopHtml.AddTitleParts(T("PageTitle.BackInStockSubscriptions").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-account-page");
    NopHtml.AppendPageCssClassParts("html-back-in-stock-subscription-list-page");
}

@section CustomHeading
{
    @await Html.PartialAsync("_MyAccountTitleSection", T("Account.BackInStockSubscriptions").Text)
}

@section left
{
    @await Component.InvokeAsync(typeof(CustomerNavigationViewComponent), new { selectedTabId = CustomerNavigationEnum.BackInStockSubscriptions })
}
<div class="page account-page back-in-stock-subscription-list-page">
    <div class="vult-page-title">
        <h2>@T("Account.BackInStockSubscriptions")</h2>
    </div>
    <div class="page-body">
        @if (Model.Subscriptions.Count > 0)
        {
            <div class="description">
                @T("Account.BackInStockSubscriptions.Description")
            </div>
            <script asp-location="Footer">
                $(document).ready(function () {
                    $('#selectall').on('click', function () {
                        $('.subscription-list .rowcheckbox').prop('checked', $(this).is(':checked')).trigger('change');
                    });

                    $('.subscription-list .rowcheckbox').on('change', function (e) {
                        var numChkBoxes = $('.subscription-list .rowcheckbox').length;
                        var numChkBoxesChecked = $('.subscription-list .rowcheckbox:checked').length;
                        $('#selectall').prop('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                    });
                });
            </script>
            <form asp-route="CustomerBackInStockSubscriptions" method="post">
                <div class="subscription-list">
                    <div class="table-wrapper">
                        <table class="data-table">
                            <colgroup>
                                <col width="1" />
                                <col />
                            </colgroup>
                            <thead>
                                <tr>
                                    <th class="select-boxes">
                                        <input type="checkbox" id="selectall" class="inp-cbx" />
                                        <label class="cbx" for="selectall">
                                            <span>
                                                <svg width="12px" height="10px" viewBox="0 0 12 10">
                                                    <polyline points="1.5 6 4.5 9 10.5 1"></polyline>
                                                </svg>
                                            </span>
                                        </label>
                                    </th>
                                    <th class="product">
                                        @T("Account.BackInStockSubscriptions.ProductColumn")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (var i = 0; i < Model.Subscriptions.Count; i++)
                                {
                                    var item = Model.Subscriptions[i];
                                    <tr @(i % 2 == 0 ? Html.Raw(" class=\"odd\"") : Html.Raw(" class=\"even\""))>
                                        <td class="select-boxes">
                                            <input type="checkbox" id="biss@(item.Id)" name="biss@(item.Id)" class="rowcheckbox inp-cbx" />
                                            <label class="cbx" for="biss@(item.Id)">
                                                <span>
                                                    <svg width="12px" height="10px" viewBox="0 0 12 10">
                                                        <polyline points="1.5 6 4.5 9 10.5 1"></polyline>
                                                    </svg>
                                                </span>
                                            </label>
                                        </td>
                                        <td class="product">
                                            <a href="@(Url.RouteUrl<Product>(new { SeName = item.SeName }))">@item.ProductName</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    @{
                        var pager = await Html.PagerAsync(Model.PagerModel);
                    }
                    @if (!string.IsNullOrEmpty(await pager.RenderHtmlContentAsync()))
                    {
                        <div class="pager">
                            @pager
                        </div>
                    }
                    <div class="buttons">
                        <button type="submit" name="save" class="button-1 delete-selected-biss-button primary-btn"><span>@T("Account.BackInStockSubscriptions.DeleteSelected")</span></button>
                    </div>
                </div>
            </form>
        }
        else
        {
            <div class="no-data">
                @T("Account.BackInStockSubscriptions.NoSubscriptions")
            </div>
        }
    </div>
</div>